#! /usr/bin/perl

#   Copyright (c) 2004 Martin Schulze <joey@infodrom.org>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

# This is a simple test for whether UTF-8 encodings will be destroyed
# or delivered properly.  With the old mailto (per 1.2.6-5) it the
# second character would be eaten in secure().

use strict;
use LWP::UserAgent;

my $server  = "www.infodrom.north.de";
my $path    = "/cgi-bin/mailto";
my $payload = "message=[".chr(193).chr(129)."]";
my @parms   = ("Reply-To=mailto-test\@infodrom.org",
	       "To=joey\@infodrom.north.de",
	       "Subject=mailto test",
	       "text=old: [A], new: [A.]",
	       $payload);

my $user = LWP::UserAgent->new;

$user->agent("mailto/1.2.6 ");

my $request = HTTP::Request->new(POST => 'http://'.$server.$path);

$request->content(join ("&", @parms));

my $result = $user->request($request);

if ($result->is_success) {
    print $result->content;
} else {
    printf "%s\n", $result->status_line;
}

